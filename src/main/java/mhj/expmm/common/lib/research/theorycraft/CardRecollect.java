package mhj.expmm.common.lib.research.theorycraft;import net.minecraft.entity.player.EntityPlayer;import net.minecraft.nbt.NBTTagCompound;import net.minecraft.util.math.MathHelper;import net.minecraft.util.text.TextComponentTranslation;import net.minecraft.util.text.TextFormatting;import thaumcraft.api.research.theorycraft.ResearchTableData;import thaumcraft.api.research.theorycraft.TheorycraftCard;import java.util.ArrayList;import java.util.Random;/** * @Author: ManualHuaJi */public class CardRecollect extends TheorycraftCard {    String cat;    @Override    public NBTTagCompound serialize() {        NBTTagCompound nbt = super.serialize();        nbt.setString("cat", this.cat);        return nbt;    }    @Override    public void deserialize(NBTTagCompound nbt) {        super.deserialize(nbt);        this.cat = nbt.getString("cat");    }    @Override    public boolean initialize(EntityPlayer player, ResearchTableData data) {        ArrayList<String> s = new ArrayList();        for (String c : data.categoryTotals.keySet()) {            if (data.categoriesBlocked.contains(c)) {                s.add(c);            }        }        if (s.size() < 1) {            return false;        }        Random r = new Random(getSeed());        this.cat = ((String) s.get(r.nextInt(s.size())));        return this.cat != null && data.categoriesBlocked.size() != 0;    }    @Override    public int getInspirationCost() {        return 0;    }    @Override    public String getLocalizedName() {        return                new TextComponentTranslation("card.recollect.name", new Object[]{TextFormatting.DARK_BLUE + "" + TextFormatting.BOLD + new TextComponentTranslation(new StringBuilder().append("tc.research_category.").append(this.cat).toString(), new Object[0]).getUnformattedText() + TextFormatting.RESET + "" + TextFormatting.BOLD}).getUnformattedText();    }    @Override    public String getLocalizedText() {        return                new TextComponentTranslation("card.recollect.text", new Object[]{TextFormatting.BOLD + new TextComponentTranslation(new StringBuilder().append("tc.research_category.").append(this.cat).toString(), new Object[0]).getFormattedText() + TextFormatting.RESET}).getUnformattedText();    }    @Override    public boolean activate(EntityPlayer player, ResearchTableData data) {        if (this.cat == null) {            return false;        }        data.categoriesBlocked.remove(this.cat);        data.addTotal(this.cat, -MathHelper.floor(data.getTotal(this.cat) * 0.3));        return true;    }}